AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: GLOF DEV CloudFormation

Parameters:
  LambdaVersion:
    Type: String
    Default: 20210730084656
  Bucket:
    Type: String
    Default: glof-test
  DeployStage:
    Type: String
    Default: dev
  Account:
    Type: String
    Default: 565651431982

Resources:
  # 배치 Lambda 함수의 권환 관리
  GlofLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: GLOF_LAMBDA_BASE_ROLE
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
        Version: 2012-10-17
      Policies:
        - PolicyName: GLOF_BASE_POLICY
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource:
                  - "*"
              - Effect: Allow
                Action:
                  - "ssm:GetParam*"
                Resource: "*"
  Authorizer:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: handler.lambda_handler
      Runtime: python3.8
      CodeUri:
        Bucket: !Ref Bucket
        Key: !Sub [ "lambdas/${deployStage}/${deployVersion}/firebase_token.zip",{ deployStage: !Ref DeployStage,deployVersion: !Ref LambdaVersion } ]
      Description: 'Firebase user Authorizer'
      MemorySize: 128
      Timeout: 10
      Role: !GetAtt GlofLambdaRole.Arn
      Environment:
        Variables:
          ENV: !Ref DeployStage
          TZ: Asia/Seoul
